
#
# Notice: Any links, references, or attachments that contain sample scripts, code, or commands comes with the following notification.
#
# This Sample Code is provided for the purpose of illustration only and is not intended to be used in a production environment.
# THIS SAMPLE CODE AND ANY RELATED INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
#
# We grant You a nonexclusive, royalty-free right to use and modify the Sample Code and to reproduce and distribute the object code form of the Sample Code,
# provided that You agree:
#
# (i) to not use Our name, logo, or trademarks to market Your software product in which the Sample Code is embedded;
# (ii) to include a valid copyright notice on Your software product in which the Sample Code is embedded; and
# (iii) to indemnify, hold harmless, and defend Us and Our suppliers from and against any claims or lawsuits,
# including attorneysâ€™ fees, that arise or result from the use or distribution of the Sample Code.
#
# Please note: None of the conditions outlined in the disclaimer above will superseded the terms and conditions contained within the Premier Customer Services Description.
#
# DEMO POC - "AS IS"

name: Create Azure Resources

on:  
  workflow_dispatch:
          
jobs:
  create-dev-environment:
    uses: hugogirard/formRecognizerDevOps/.github/workflows/create-resources.yml@main
    with:
      resourceGroupName: 'rg-form-recognizer-devops-dev'
      location: 'eastus'      
      environmentName: 'dev'      
    secrets:
      azure_credentials: ${{ secrets.AZURE_CREDENTIALS  }}
      subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
      admin_identity: ${{ secrets.ADMIN_PRINCIPAL_OBJECT_ID }}

  create-qa-environment:
    uses: hugogirard/formRecognizerDevOps/.github/workflows/create-resources.yml@main
    with:
      resourceGroupName: 'rg-form-recognizer-devops-qa'
      location: 'eastus'     
      environmentName: 'qa'      
    secrets:
      azure_credentials: ${{ secrets.AZURE_CREDENTIALS  }}
      subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
      admin_identity: ${{ secrets.ADMIN_PRINCIPAL_OBJECT_ID }}

  create-prod-environment:
    uses: hugogirard/formRecognizerDevOps/.github/workflows/create-resources.yml@main
    with:
      resourceGroupName: 'rg-form-recognizer-devops-prod'
      location: 'eastus'     
      environmentName: 'prod'      
    secrets:
      azure_credentials: ${{ secrets.AZURE_CREDENTIALS  }}
      subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
      admin_identity: ${{ secrets.ADMIN_PRINCIPAL_OBJECT_ID }}      

  give-vault-access-service-principal:
    needs: [create-dev-environment, create-qa-environment, create-prod-environment]
    runs-on: ubuntu-latest

    steps:

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.azure_credentials }}  

      - name: Give SP Dev Access Vault
        run: az keyvault set-policy -n ${{ needs.create-dev-environment.outputs.keyVaultName }} --secret-permissions get list --spn ${{ secrets.SP_PRINCIPAL_OBJECT_ID }}

      - name: Give SP QA Access Vault
        run: az keyvault set-policy -n ${{ needs.create-qa-environment.outputs.keyVaultName }} --secret-permissions get list --spn ${{ secrets.SP_PRINCIPAL_OBJECT_ID }}

      - name: Give SP Prod Access Vault
        run: az keyvault set-policy -n ${{ needs.create-prod-environment.outputs.keyVaultName }} --secret-permissions get list --spn ${{ secrets.SP_PRINCIPAL_OBJECT_ID }}                
  
  create-deploy-azure-function:
    needs: [create-dev-environment, create-qa-environment, create-prod-environment]
    runs-on: ubuntu-latest

    env:
      RG_NAME: 'rg-form-recognizer-devops-utility'
      LOCATION: 'eastus'

    steps:    
      - uses: actions/checkout@v2

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.azure_credentials }}  

      - name: Create Resource Group
        run: |
          az group create -n ${{ env.RG_NAME }} -l ${{ env.LOCATION }}

      - name: Replace tokens
        uses: cschleiden/replace-tokens@v1.0
        with:        
          tokenPrefix: __        
          tokenSuffix: __        
          files: '["deploy.parameters.json"]'
        env:
          formRecognizerDevEndpoint: ${{ needs.create-dev-environment.outputs.formRecognizerEndpoint }}
          formRecognizerQAEndpoint: ${{ needs.create-qa-environment.outputs.formRecognizerEndpoint }}
          formRecognizerProdEndpoint: ${{ needs.create-prod-environment.outputs.formRecognizerEndpoint }}
          formRecognizerDevKey: ${{ needs.create-dev-environment.outputs.formRecognizerKey }}
          formRecognizerQAKey: ${{ needs.create-qa-environment.outputs.formRecognizerKey }}
          formRecognizerProdKey: ${{ needs.create-prod-environment.outputs.formRecognizerKey  }}

      - name: Deploy Azure Resources
        id: armDeployment
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.subscriptionId }}
          resourceGroupName: ${{ env.RG_NAME }}
          template: ./bicep/utility.bicep
          parameters: ./bicep/utility.parameters.json

  write-vault-name:
    needs: [create-dev-environment, create-qa-environment, create-prod-environment]
    runs-on: ubuntu-latest

    steps:
      - uses: gliech/create-github-secret-action@v1
        with:
          name: KEYVAULT_DEV_NAME
          value: ${{ needs.create-dev-environment.outputs.keyVaultName }}
          pa_token: ${{ secrets.PA_TOKEN }}

      - uses: gliech/create-github-secret-action@v1
        with:
          name: KEYVAULT_QA_NAME
          value: ${{ needs.create-qa-environment.outputs.keyVaultName }}
          pa_token: ${{ secrets.PA_TOKEN }}

      - uses: gliech/create-github-secret-action@v1
        with:
          name: KEYVAULT_PROD_NAME
          value: ${{ needs.create-prod-environment.outputs.keyVaultName }}
          pa_token: ${{ secrets.PA_TOKEN }}          
