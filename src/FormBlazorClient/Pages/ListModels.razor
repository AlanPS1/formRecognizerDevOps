@page "/"

@inject IModelService _modelService

<h2>List of trained model in an environment</h2>

<Loading IsLoading="@IsLoading" />

<div class="row" style="margin-top:25px">
    <div class="col-md-2">
        <Environments OnEnvironmentChanged="(async (e) => await OnEnvironmentChanged(e))"/>
    </div>
</div>

@if (Models != null)
{
    <div class=row  style="margin-top:30px">
        <div class=col-md-12>
            <table class="table table-striped table-hover">
              <thead>
                <tr>
                  <th scope="col">ModelId</th>
                  <th scope="col">Description</th>
                  <th scope="col">CreatedOn</th> 
                  <th></th>
                  <th></th>
                </tr>
              </thead>
              <tbody>
                @foreach(var model in Models)
                {
                    <tr>
                        <td>@model.ModelId</td>
                        <td>@model.Description</td>
                        <td>@model.CreatedOn</td>
                        <td>
                            <button class="btn btn-primary">
                                TEST
                            </button>
                        </td>
                        <td>
                            <button class="btn btn-danger">
                                DELETE
                            </button>
                        </td>
                    </tr>        
                }
              </tbody>
            </table>
        </div>
    </div>    
}


@code {
    private bool IsLoading = false;

    private IEnumerable<ModelDefinition> Models;

    async Task OnEnvironmentChanged(ModelEnvironment environment)
    {
        IsLoading = true;
        Models = await _modelService.GetModelsAsync(environment);
        IsLoading = false;
    }
}
